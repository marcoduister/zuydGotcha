@model Models.Game

@{
    ViewBag.Title = "Spel bewerken";
}

<h2>Spel Bewerken</h2>



<ul class="nav nav-pills mb-3" id="pills-tab" role="tablist">
    <li class="nav-item" role="presentation">
        <button class="nav-link active" id="pills-Game-tab" data-bs-toggle="pill" data-bs-target="#pills-Game" type="button" role="tab" aria-controls="pills-Game" aria-selected="true">Spell</button>
    </li>
    <li class="nav-item" role="presentation">
        <button class="nav-link" id="pills-Users-tab" data-bs-toggle="pill" data-bs-target="#pills-Users" type="button" role="tab" aria-controls="pills-Users" aria-selected="false">spellers</button>
    </li>
</ul>
<div class="tab-content" id="pills-tabContent">
    <div class="tab-pane fade show active" id="pills-Game" role="tabpanel" aria-labelledby="pills-Game-tab">

        @using (Html.BeginForm())
        {
            @Html.AntiForgeryToken()

            <hr />
            @Html.ValidationSummary(true, "", new { @class = "text-danger" })
            @Html.HiddenFor(model => model.Id)
            <div class="container">
                <div class="row">
                    <div class="col">
                        <div class="form-group">
                            @Html.LabelFor(model => model.Game_Name, htmlAttributes: new { @class = "control-label col-md-2" })
                            <div class="col-md-10">
                                @Html.EditorFor(model => model.Game_Name, new { htmlAttributes = new { @class = "form-control" } })
                                @Html.ValidationMessageFor(model => model.Game_Name, "", new { @class = "text-danger" })
                            </div>
                        </div>

                        <div class="form-group">
                            @Html.LabelFor(model => model.Game_Start, htmlAttributes: new { @class = "control-label col-md-2" })
                            <div class="col-md-10">
                                @Html.TextBoxFor(m => m.Game_Start, new { @class = "form-control", @readonly = true })
                                @Html.ValidationMessageFor(m => m.Game_Start, "", new { @class = "text-danger" })
                            </div>
                        </div>

                        <div class="form-group">
                            @Html.LabelFor(model => model.Game_Eind, htmlAttributes: new { @class = "control-label col-md-2" })
                            <div class="col-md-10">
                                @Html.TextBoxFor(m => m.Game_Eind, new { @class = "form-control", @readonly = true })
                                @Html.ValidationMessageFor(m => m.Game_Eind, "", new { @class = "text-danger" })
                            </div>
                        </div>
                        <div class="form-group">
                            @Html.LabelFor(model => model.Location, htmlAttributes: new { @class = "control-label col-md-2" })
                            <div class="col-md-10">
                                @Html.EditorFor(model => model.Location, new { htmlAttributes = new { @class = "form-control" } })
                                @Html.ValidationMessageFor(model => model.Location, "", new { @class = "text-danger" })
                            </div>
                        </div>
                        <div class="form-group">
                            @Html.LabelFor(model => model.RandomWiner, htmlAttributes: new { @class = "control-label col-md-2" })
                            <div class="col-md-10">
                                @Html.DropDownListFor(model => model.RandomWiner, Model.GamePlayers.Select(a => new SelectListItem { Value = a.Id.ToString(), Text = a.User.Account.FirstName + " " + a.User.Account.LastName }), "Select a RandomWinner", new { @class = "form-control" })
                                @Html.ValidationMessageFor(model => model.RandomWiner, "", new { @class = "text-danger" })
                            </div>
                        </div>

                        <div class="form-group">
                            @Html.LabelFor(model => model.BestKill, htmlAttributes: new { @class = "control-label col-md-2" })
                            <div class="col-md-10">
                                @Html.DropDownListFor(model => model.BestKill, Model.GamePlayers.Select(a => new SelectListItem { Value = a.Id.ToString(), Text = a.User.Account.FirstName+" "+ a.User.Account.LastName }), "Select a BestKill", new { @class = "form-control" })
                                @Html.ValidationMessageFor(model => model.BestKill, "", new { @class = "text-danger" })
                            </div>
                        </div>
                    </div>

                    
                    <div class="col">
                        <hr />
                        <div class="form-group">
                            @Html.LabelFor(model => model.WordSet_Id, htmlAttributes: new { @class = "control-label col-md-2" })
                            <div class="col-md-10">
                                @Html.DropDownListFor(model => model.WordSet_Id, (IEnumerable<SelectListItem>)ViewData["WordSetDrop"] ?? new List<SelectListItem>(), "Select a WordSet", new { @class = "form-control" })
                       
                                @Html.ValidationMessageFor(model => model.WordSet_Id, "", new { @class = "text-danger" })
                            </div>
                        </div>

                        <div class="form-group">
                            @Html.LabelFor(model => model.GameType_Id, htmlAttributes: new { @class = "control-label col-md-2" })
                            <div class="col-md-10">
                                @Html.DropDownListFor(model => model.GameType_Id, (IEnumerable<SelectListItem>)ViewData["GameTypeDrop"] ?? new List<SelectListItem>(), "Select a GameType", new { @class = "form-control" })
                                @Html.ValidationMessageFor(model => model.GameType_Id, "", new { @class = "text-danger" })
                            </div>
                        </div>

                        <div class="form-group">
                            @Html.LabelFor(model => model.RuleSet_Id, htmlAttributes: new { @class = "control-label col-md-2" })
                            <div class="col-md-10">
                                @Html.DropDownListFor(model =>model.RuleSet_Id, (IEnumerable<SelectListItem>)ViewData["RuleSetDrop"] ?? new List<SelectListItem>(), "Select a RuleSet", new { @class = "form-control" })
                                @Html.ValidationMessageFor(model => model.RuleSet_Id, "", new { @class = "text-danger" })
                            </div>
                        </div>

                        <div class="form-group">
                            <hr />
                            <div class="col-md-offset-2 col-md-10">

                                @Html.ActionLink("Terug", "index", null, new { @class = "btn btn-danger" })
                                <input type="submit" value="Save" class="btn btn-primary" />
                            </div>
                        </div>
                    </div>
                </div>
            </div>
        }
    </div>
    <div class="tab-pane fade" id="pills-Users" role="tabpanel" aria-labelledby="pills-Users-tab">

        <table class="table">
            <tr>
                <th>
                    Voornaam
                </th>
                <th>
                    Achternaam
                </th>
                <th>
                    Email-adres
                </th>
                <th>
                    Groep
                </th>
                <th>
                    Woonplaats
                </th>
                <th></th>
            </tr>

            @foreach (var item in Model.GamePlayers)
            {
                <tr>
                    <td>
                        @Html.DisplayFor(modelItem => item.User.Account.FirstName)
                    </td>
                    <td>
                        @Html.DisplayFor(modelItem => item.User.Account.LastName)
                    </td>
                    <td>
                        @Html.DisplayFor(modelItem => item.User.Email)
                    </td>
                    <td>
                        @Html.DisplayFor(modelItem => item.User.Account.Group)
                    </td>
                    <td>
                        @Html.DisplayFor(modelItem => item.User.Account.Residence)
                    </td>
                    <td>
                        @Html.ActionLink("Contract", "Contract", new { UserId = item.User_Id, GameId = item.Game_Id },new { @class = "btn btn-success btn-sm" })
                        <button type="button" class="btn btn-primary btn-sm" data-bs-toggle="modal" data-bs-target="#_Modal"> Profile </button>
                        <button type="button" class="btn btn-danger btn-sm" data-bs-toggle="modal" data-bs-target="#_Modal"> Verwijderen </button>

                    </td>
                </tr>
            }
        </table>
    </div>
</div>


