@model Models.Game

@{
    ViewBag.Title = "Spel Aanmaken";
}

<h2>Spel Aanmaken</h2>


@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()

    <hr />
    @Html.ValidationSummary(true, "", new { @class = "text-danger" })
    @Html.HiddenFor(model => model.Id)
    <div class="container">
        <div class="row">
            <div class="col">
                <div class="form-group">
                    @Html.LabelFor(model => model.Game_Name, htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-md-10">
                        @Html.EditorFor(model => model.Game_Name, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.Game_Name, "", new { @class = "text-danger" })
                    </div>
                </div>

                <div class="form-group">
                    @Html.LabelFor(model => model.Game_Start, htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-md-10">
                        @Html.TextBoxFor(m => m.Game_Start, new { @class = "form-control", @Type = "Date", @id = "start", @name = "trip-start" })
                        @Html.ValidationMessageFor(m => m.Game_Start, "", new { @class = "text-danger" })
                    </div>
                </div>
                <div class="form-group">
                    @Html.LabelFor(model => model.Game_Eind, htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-md-10">
                        @Html.TextBoxFor(m => m.Game_Eind, new { @class = "form-control", @Type = "Date", @id = "start", @name = "trip-start" })
                        @Html.ValidationMessageFor(m => m.Game_Eind, "", new { @class = "text-danger" })
                    </div>
                </div>
                <div class="form-group">
                    @Html.LabelFor(model => model.Location, htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-md-10">
                        @Html.EditorFor(model => model.Location, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.Location, "", new { @class = "text-danger" })
                    </div>
                </div>
            </div>


            <div class="col">
                <hr />
                <div class="form-group">
                    @Html.LabelFor(model => model.WordSet_Id, htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-md-10">
                        @Html.DropDownListFor(model => model.WordSet_Id, Enumerable.Range(1, 10)
                       .Select(i => new SelectListItem { Text = "WordSet " + i.ToString(), Value = i.ToString() }), new { @class = "form-control" })
                        @Html.ValidationMessageFor(model => model.WordSet_Id, "", new { @class = "text-danger" })
                    </div>
                </div>

                <div class="form-group">
                    @Html.LabelFor(model => model.GameType_Id, htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-md-10">
                        @Html.DropDownListFor(model => model.GameType_Id, Enumerable.Range(1, 10)
                       .Select(i => new SelectListItem { Text = "GameType " + i.ToString(), Value = i.ToString() }), new { @class = "form-control" })
                        @Html.ValidationMessageFor(model => model.GameType_Id, "", new { @class = "text-danger" })
                    </div>
                </div>

                <div class="form-group">
                    @Html.LabelFor(model => model.RuleSet_Id, htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-md-10">
                        @Html.DropDownListFor(model => model.RuleSet_Id, Enumerable.Range(1, 10)
                            .Select(i => new SelectListItem { Text = "RuleSet " + i.ToString(), Value = i.ToString() }), new { @class = "form-control" })
                        @Html.ValidationMessageFor(model => model.RuleSet_Id, "", new { @class = "text-danger" })
                    </div>
                </div>

                <div class="form-group">
                    <hr />
                    <div class="col-md-offset-2 col-md-10">

                        @Html.ActionLink("Terug", "index", null, new { @class = "btn btn-danger" })
                        <input type="submit" value="Save" class="btn btn-primary" />
                    </div>
                </div>
            </div>
        </div>
    </div>
}
